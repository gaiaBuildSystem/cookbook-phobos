#!/bin/bash

YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m'


# Signal handler for graceful shutdown
cleanup() {
    echo "Received termination signal, cleaning up..."
    pkill -SIGINT drmi

    cat /dev/zero > /dev/fb0 2>/dev/null
    echo "Cleanup done. Exiting..."

    exit 0
}

# Trap termination signals
trap cleanup SIGTERM SIGINT SIGQUIT


# check if the script has been run as root
if [ "$EUID" -ne 0 ]; then
    echo "Please run with root privileges (sudo)"
    exit 69
fi

# load the first image
drmi /usr/share/pair-fb/diagrams.jpg 0 1 &

# let's wait some time
sleep 10s

ping -c 1 8.8.8.8 > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "Error: No internet connection. Please check your network settings." >&2
    exit 69
fi

ret=$(curl -fsSL "https://app.torizon.io/api/provision-code")

# Check if curl command succeeded
if [ $? -ne 0 ]; then
    echo "Error: Failed to connect to Torizon API" >&2
    exit 1
fi

# Check if response is empty
if [ -z "$ret" ]; then
    echo "Error: Received empty response from API" >&2
    exit 2
fi

# Try to parse the JSON response
if ! code=$(echo "$ret" | jq -r '.provisionCode' 2>/dev/null); then
    echo "Error: Failed to parse API response code" >&2
    exit 3
fi

# try to parse the uuid
if ! uuid=$(echo "$ret" | jq -r '.provisionUuid' 2>/dev/null); then
    echo "Error: Failed to parse API response uuid" >&2
    exit 4
fi

# make each char of code be c o d e
code=$(echo "$code" | sed 's/./& /g')
# trim leading and trailing spaces
code=$(echo "$code" | sed 's/^[ \t]*//;s/[ \t]*$//')

echo ""
echo -e "Access ${BLUE}https://pair.torizon.io${NC} and use code [${YELLOW}$code${NC}] to pair this device"
echo ""

cp /usr/share/pair-fb/diagrams.jpg /home/phobos/back.jpg

# set the back image
convert \
    /home/phobos/back.jpg \
    -gravity SouthWest \
    -pointsize 46 \
    -fill white \
    -annotate +80+10 \
    "https://pair.torizon.io\nCode: ${code}" \
    /home/phobos/output.jpg

pkill -SIGINT drmi
sleep 1
drmi /home/phobos/output.jpg 0 1 &

while true; do
    sleep 10

    echo "Checking pairing status..."

    _info=$(curl -fsSL "https://app.torizon.io/api/provision-code?provisionUuid=$uuid")
    _token=$(echo "$_info" | awk -F'"' '/access/{print $4}')
    if [ "$_token" != "" ]; then
        break
    fi
done

sh <<SCRIPT
/usr/bin/provision-device -u https://app.torizon.io/api/accounts/devices -t "${_token}" && systemctl restart aktualizr remote-access
SCRIPT

echo "done ..."

# print the info
convert \
    /home/phobos/back.jpg \
    -gravity SouthWest \
    -pointsize 46 \
    -fill white \
    -annotate +80+10 \
    "Paired OK" \
    /home/phobos/output.jpg

pkill -SIGINT drmi
sleep 1s

drmi /home/phobos/output.jpg 0 1 &

# sleep like 2min
sleep 120s
pkill -SIGINT drmi
cat /dev/zero > /dev/fb0 2>/dev/null
